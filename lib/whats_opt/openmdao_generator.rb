require 'erb'
#require 'fileutils'
require 'tmpdir'

module WhatsOpt
  
  class OpenmdaoGenerator
    
    class DisciplineNotFoundException < StandardError
    end
    
    def initialize(mda)
      @mda = mda
      @template_dir = File.join(File.dirname(__FILE__), "templates")
      @gendir = Dir.mktmpdir("openmdao-#{@mda.name.downcase}-")
    end
    
    def generate
      @mda.disciplines.each do |disc|
        generate_discipline disc
      end 
      generate_main
    end
    
    def generate_main
      _generate "#{@mda.name.downcase}.py", 'openmdao_main.py.erb'
    end
    
    def generate_discipline(disc)
      @discipline = disc
      if @discipline
        _generate "#{@discipline.name.downcase}.py", 'openmdao_discipline.py.erb'
      else
        raise DisciplineNotFoundException.new("Discipline " +
          discname + " not found in " + @mda.disciplines)
      end
    end
    
    def _generate(filename, template_filename)
      template = File.join(@template_dir, template_filename)
      Rails.logger.info "Creating #{filename} from #{File.basename(template)}"
      filepath = File.join(@gendir, filename) if @gendir      
      result = _comment_header(filepath)
      result += _run_template(template)
      fh = File.open(filepath, "w") 
      fh.print result
      fh.close
      filepath
    end
    
    def _run_template(name)
      erb = ERB.new(File.open(name, "rb").read, nil, '>')
      erb.result(binding)
    end
    
    def _comment_header(filepath)
<<HEADER
################################################################################
# -- #{File.basename(filepath)}
# Autogenerated by WhatsOpt (at least initially)
################################################################################
HEADER
    end
    
  end
  
end
