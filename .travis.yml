language: ruby
rvm:
  - 2.7.2

dist: xenial

cache:
  bundler: true
  pip: true
  directories:
    - node_modules

sudo: required

install:
  # Ruby gems installation
  - bundle install --jobs=3 --retry=3 --deployment

  # Node/Yarn
  - nvm install node
  - node -v
  - npm install -g yarn
  - yarn

  # Anaconda installation
  - wget http://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh
  - bash miniconda.sh -b -p $HOME/miniconda
  - export PATH="$HOME/miniconda/bin:$PATH"
  - hash -r
  - conda config --set always_yes yes --set changeps1 no
  - conda update -q conda
  # Useful for debugging any issues with conda
  - conda info -a

  # Need to install the actual Python version, does this work?
  # To get the correct version you have to do a conda install
  # Old versions are at: http://repo.continuum.io/miniconda/ but don't 
  # match Python versions and it seems like continuum doesn't want you 
  # to try and match
  - conda create -q -n test-environment python=3.6 numpy pandas scipy cython scikit-learn
  - source activate test-environment
  - pip install --upgrade pip
  - pip install wop
  - pip install smt
  - pip install salib
  - pip install thrift
  - pip install openturns
  - pip install -e services
  - python --version
  - pip list

  # Apache Thrift
  # Thrift
  - export THRIFT_VERSION=0.13.0
  - export buildDeps="automake bison curl flex g++ libboost-dev libboost-filesystem-dev libboost-program-options-dev libboost-system-dev libboost-test-dev  libevent-dev libssl-dev libtool make pkg-config"
  - sudo apt-get install -y --no-install-recommends $buildDeps && sudo rm -rf /var/lib/apt/lists/*
  - sudo curl -sSL "http://apache.mirrors.spacedump.net/thrift/$THRIFT_VERSION/thrift-$THRIFT_VERSION.tar.gz" -o $HOME/thrift.tar.gz
  - mkdir -p $HOME/thrift
  - tar zxf $HOME/thrift.tar.gz -C $HOME/thrift --strip-components=1
  - pushd $HOME/thrift
  - ./configure  --without-python --without-cpp --without-ruby --without-nodejs --without-py3 --without-go --without-php --without-java
  - make
  - sudo make install
  - popd

before_script:
  - cp config/configuration.yml.example config/configuration.yml
  - cp config/database.yml.example config/database.yml
  - mkdir -p upload/store
  - RAILS_ENV=test bundle exec rake db:schema:load
  - bundle exec rake db:test:prepare
  - RAILS_ENV=test bundle exec rake webpacker:compile
script:
  - WHATSOPT_COVERALLS=1 bundle exec rake test
