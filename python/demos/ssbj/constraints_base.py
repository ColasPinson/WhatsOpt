# -*- coding: utf-8 -*-
"""
  constraints_base.py generated by WhatsOpt. 
"""
# DO NOT EDIT unless you know what you are doing
# analysis_id: 3

import numpy as np
from openmdao.api import ExplicitComponent

class ConstraintsBase(ExplicitComponent):
    """ An OpenMDAO base component to encapsulate Constraints discipline """

    def setup(self):
		
        self.add_input('DT', val=1.0, desc='throttle setting')
        self.add_input('ESF', val=1.0, desc='engine scale factor')
        self.add_input('Temp', val=1.0, desc='engine temperature')
        self.add_input('Theta', val=1.0, desc='wing twist')
        self.add_input('dpdx', val=1.0, desc='pressure gradient')
        self.add_input('sigma', val=np.ones((5,)), desc='stress on wing')
		
        self.add_output('con_sigma3', val=1.0, desc='stress constraint 3')
        self.add_output('con_dpdx', val=1.0, desc='pressure gradient constraint')
        self.add_output('con_temp', val=1.0, desc='engine temperature constraint')
        self.add_output('con1_esf', val=1.0, desc='engine factor upper bound constraint ')
        self.add_output('con_theta_low', val=1.0, desc='theta lower bound constraint')
        self.add_output('con_sigma4', val=1.0, desc='stress constraint 4')
        self.add_output('con_sigma5', val=1.0, desc='stress constraint 5')
        self.add_output('con2_esf', val=1.0, desc='engine factor lower bound constraint')
        self.add_output('con_sigma1', val=1.0, desc='stress constraint 1')
        self.add_output('con_sigma2', val=1.0, desc='stress constraint 2')
        self.add_output('con_dt', val=1.0, desc='throttle setting constraint')
        self.add_output('con_theta_up', val=1.0, desc='theta upper bound constraint')
		

        