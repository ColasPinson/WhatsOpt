# -*- coding: utf-8 -*-
"""
  run_doe.py generated by WhatsOpt. 
"""
# DO NOT EDIT unless you know what you are doing
# analysis_id: 48

import numpy as np
import matplotlib.pyplot as plt
from openmdao.api import Problem, SqliteRecorder, CaseReader
from whatsopt.smt_doe_driver import SmtDoeDriver

from sellar import Sellar 


pb = Problem(Sellar())
pb.driver = SmtDoeDriver(sampling_method='LHS', n_cases=50)
case_recorder_filename = 'sellar_doe.sqlite'        
recorder = SqliteRecorder(case_recorder_filename)
pb.driver.add_recorder(recorder)
pb.model.add_recorder(recorder)
pb.model.nonlinear_solver.add_recorder(recorder)






pb.setup()  
pb.run_driver()        
reader = CaseReader(case_recorder_filename)
cases = reader.system_cases.list_cases()
n = len(cases)
data = {'inputs': {}, 'outputs': {} }


data['outputs']['g2'] = np.zeros((n,)+(1,))
data['outputs']['obj'] = np.zeros((n,)+(1,))
data['outputs']['g1'] = np.zeros((n,)+(1,))

for i, case_id in enumerate(cases):
    case = reader.system_cases.get_case(case_id)


    data['outputs']['g2'][i,:] = case.outputs['g2']

    data['outputs']['obj'][i,:] = case.outputs['obj']

    data['outputs']['g1'][i,:] = case.outputs['g1']

      



output = data['outputs']['g2'].reshape(-1)








output = data['outputs']['obj'].reshape(-1)








output = data['outputs']['g1'].reshape(-1)







plt.show()
