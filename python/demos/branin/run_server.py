# -*- coding: utf-8 -*-
"""
  run_server.py generated by WhatsOpt. 
"""
#!/usr/bin/env python

from thrift.transport import TSocket
from thrift.transport import TTransport
from thrift.protocol import TBinaryProtocol
from thrift.server import TServer

from server.branin import Branin as BraninService
from server.branin_conversions import *
from branin import Branin as Factory

class BraninHandler:
    server = None

    def __init__(self):
        factory = Factory()
        
        self.branin_function = factory.create_branin_function()
        

    # Admin interface
    def ping(self):
        print("Ping!")

    def shutdown(self):
        print("Shutting down Branin server...")
        exit(0)

    # Branin interface
    
    def compute_branin_function(self, ins):
        outputs = {}
        inputs = to_openmdao_branin_function_inputs(ins)
        self.branin_function.compute(inputs, outputs)
        return to_thrift_branin_function_output(outputs)
    


handler = BraninHandler()
processor = BraninService.Processor(handler)
transport = TSocket.TServerSocket('0.0.0.0', port=31400)
tfactory = TTransport.TBufferedTransportFactory()
pfactory = TBinaryProtocol.TBinaryProtocolFactory()

server = handler.server = TServer.TSimpleServer(processor, transport, tfactory, pfactory)

print("Starting Branin analysis server...")
server.serve()
print("done!")
