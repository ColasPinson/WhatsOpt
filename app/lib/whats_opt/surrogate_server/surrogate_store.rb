#
# Autogenerated by Thrift Compiler (0.11.0)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#

require 'thrift'
require 'surrogate_store_types'

module WhatsOpt
  module SurrogateServer
    module SurrogateStore
      class Client
        include ::Thrift::Client

        def create_surrogate(surrogate_id, kind, xt, yt)
          send_create_surrogate(surrogate_id, kind, xt, yt)
          recv_create_surrogate()
        end

        def send_create_surrogate(surrogate_id, kind, xt, yt)
          send_message('create_surrogate', Create_surrogate_args, :surrogate_id => surrogate_id, :kind => kind, :xt => xt, :yt => yt)
        end

        def recv_create_surrogate()
          result = receive_message(Create_surrogate_result)
          return
        end

        def predict_values(surrogate_id, x)
          send_predict_values(surrogate_id, x)
          return recv_predict_values()
        end

        def send_predict_values(surrogate_id, x)
          send_message('predict_values', Predict_values_args, :surrogate_id => surrogate_id, :x => x)
        end

        def recv_predict_values()
          result = receive_message(Predict_values_result)
          return result.success unless result.success.nil?
          raise ::Thrift::ApplicationException.new(::Thrift::ApplicationException::MISSING_RESULT, 'predict_values failed: unknown result')
        end

        def destroy_surrogate(surrogate_id)
          send_destroy_surrogate(surrogate_id)
          recv_destroy_surrogate()
        end

        def send_destroy_surrogate(surrogate_id)
          send_message('destroy_surrogate', Destroy_surrogate_args, :surrogate_id => surrogate_id)
        end

        def recv_destroy_surrogate()
          result = receive_message(Destroy_surrogate_result)
          return
        end

      end

      class Processor
        include ::Thrift::Processor

        def process_create_surrogate(seqid, iprot, oprot)
          args = read_args(iprot, Create_surrogate_args)
          result = Create_surrogate_result.new()
          @handler.create_surrogate(args.surrogate_id, args.kind, args.xt, args.yt)
          write_result(result, oprot, 'create_surrogate', seqid)
        end

        def process_predict_values(seqid, iprot, oprot)
          args = read_args(iprot, Predict_values_args)
          result = Predict_values_result.new()
          result.success = @handler.predict_values(args.surrogate_id, args.x)
          write_result(result, oprot, 'predict_values', seqid)
        end

        def process_destroy_surrogate(seqid, iprot, oprot)
          args = read_args(iprot, Destroy_surrogate_args)
          result = Destroy_surrogate_result.new()
          @handler.destroy_surrogate(args.surrogate_id)
          write_result(result, oprot, 'destroy_surrogate', seqid)
        end

      end

      # HELPER FUNCTIONS AND STRUCTURES

      class Create_surrogate_args
        include ::Thrift::Struct, ::Thrift::Struct_Union
        SURROGATE_ID = 1
        KIND = 2
        XT = 3
        YT = 4

        FIELDS = {
          SURROGATE_ID => {:type => ::Thrift::Types::STRING, :name => 'surrogate_id'},
          KIND => {:type => ::Thrift::Types::I32, :name => 'kind', :enum_class => ::WhatsOpt::SurrogateServer::SurrogateKind},
          XT => {:type => ::Thrift::Types::LIST, :name => 'xt', :element => {:type => ::Thrift::Types::LIST, :element => {:type => ::Thrift::Types::DOUBLE}}},
          YT => {:type => ::Thrift::Types::LIST, :name => 'yt', :element => {:type => ::Thrift::Types::DOUBLE}}
        }

        def struct_fields; FIELDS; end

        def validate
          unless @kind.nil? || ::WhatsOpt::SurrogateServer::SurrogateKind::VALID_VALUES.include?(@kind)
            raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field kind!')
          end
        end

        ::Thrift::Struct.generate_accessors self
      end

      class Create_surrogate_result
        include ::Thrift::Struct, ::Thrift::Struct_Union

        FIELDS = {

        }

        def struct_fields; FIELDS; end

        def validate
        end

        ::Thrift::Struct.generate_accessors self
      end

      class Predict_values_args
        include ::Thrift::Struct, ::Thrift::Struct_Union
        SURROGATE_ID = 1
        X = 2

        FIELDS = {
          SURROGATE_ID => {:type => ::Thrift::Types::STRING, :name => 'surrogate_id'},
          X => {:type => ::Thrift::Types::LIST, :name => 'x', :element => {:type => ::Thrift::Types::LIST, :element => {:type => ::Thrift::Types::DOUBLE}}}
        }

        def struct_fields; FIELDS; end

        def validate
        end

        ::Thrift::Struct.generate_accessors self
      end

      class Predict_values_result
        include ::Thrift::Struct, ::Thrift::Struct_Union
        SUCCESS = 0

        FIELDS = {
          SUCCESS => {:type => ::Thrift::Types::LIST, :name => 'success', :element => {:type => ::Thrift::Types::DOUBLE}}
        }

        def struct_fields; FIELDS; end

        def validate
        end

        ::Thrift::Struct.generate_accessors self
      end

      class Destroy_surrogate_args
        include ::Thrift::Struct, ::Thrift::Struct_Union
        SURROGATE_ID = 1

        FIELDS = {
          SURROGATE_ID => {:type => ::Thrift::Types::STRING, :name => 'surrogate_id'}
        }

        def struct_fields; FIELDS; end

        def validate
        end

        ::Thrift::Struct.generate_accessors self
      end

      class Destroy_surrogate_result
        include ::Thrift::Struct, ::Thrift::Struct_Union

        FIELDS = {

        }

        def struct_fields; FIELDS; end

        def validate
        end

        ::Thrift::Struct.generate_accessors self
      end

    end

  end
end
