<% @mda.sub_analyses.each do |mda| %>
from <%= mda.py_full_modulename %>_base import <%= mda.py_classname %>Base, <%= mda.py_classname %>FactoryBase
<% end %>

<% @mda.sub_analyses.each do |mda| %>
class <%= mda.py_classname %>Proxy(<%= mda.py_classname %>Base):
    """ An OpenMDAO component to encapsulate <%= mda.py_classname %> analysis """
    def __init__(self, thrift_client):
        super(<%= mda.camelname %>Proxy, self).__init__()
        self._thrift_client = thrift_client    
<% end %>